{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Auth/Auth.css","components/UI/Button/Button.css","components/UI/Input/Input.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Loader/Loader.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","containers/QuizList/QuizList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/UI/Button/Button.js","components/UI/Input/Input.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/auth.js","containers/Auth/Auth.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","store/actions/quiz.js","containers/Quiz/Quiz.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","store/actions/create.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","Drawer","close","active","MenuToggle","open","Auth","AuthForm","Button","error","success","primary","Input","invalid","Quiz","QuizWrapper","ActiveQuiz","Question","AnswerItem","FinishedQuiz","Loader","center","Layout","Backdrop","AnswersList","QuizCreator","Select","QuizList","props","cls","classes","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","clickHandler","_this","onClose","links","_this2","this","map","link","index","key","react_router_dom","to","exact","activeClassName","label","isAuthenticated","Fragment","renderLinks","UI_Backdrop_Backdrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","connect","auth","token","type","disabled","isInvalid","_ref","valid","touched","shouldValidate","inputType","htmlFor","concat","Math","random","id","value","onChange","errorMessage","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","autoLogout","time","dispatch","setTimeout","logout","localStorage","removeItem","authSuccess","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","e","preventDefault","isValid","trim","is","length","event","controlName","Object","objectSpread","control","target","validateControl","keys","forEach","name","UI_Input_Input","onChangeHandler","onSubmit","renderInputs","UI_Button_Button","isLogin","asyncToGenerator","regenerator_default","mark","_callee","authData","url","response","data","experationDate","wrap","_context","prev","next","returnSecureToken","post","sent","Date","getTime","expiresIn","setItem","idToken","localId","stop","_x","apply","arguments","onAnswerClick","answer","text","answers","AnswersList_AnswerItem_AnswerItem","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","successCount","results","reduce","total","quiz","quizItem","onRetry","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","quizSetState","answerState","quizAnswerClick","answerId","getState","activeQuestion","rightAnswerId","defineProperty","timeout","window","number","isQuizFinished","clearTimeout","fetchQuizById","match","params","retryQuiz","loading","UI_Loader_Loader","isFinished","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizId","_ref2","_callee2","_context2","get","t0","_x2","createControl","config","validateForm","hasOwnProperty","Auxiliary","options","option","resetQuizCreation","createOptionControl","createFormControls","option1","option2","option3","option4","addQuestionHandler","_this$state$formContr","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","undefined","validate","selectChangeHandler","Auxiliary_Auxiliary","select","UI_Select_Select","renderControls","item","fetchQuizes","renderQuizes","Logout","react_router","App","autoLogin","routes","path","component","hoc_Layout_Layout","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6488932a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"l2o1ZkEN_bGZwkOJRS0RW\",\"close\":\"_2WTLcaCWdcQPsp74nd1oU5\",\"active\":\"_2S50OMMC5_YpLKILVnfe7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"_1Ffb2BbiUuuumOhIB6ypBJ\",\"open\":\"_32P8TUb7WvjkG6cfDkxaZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"_1TIntFyKjbqLA5PQlrm5b8\",\"AuthForm\":\"_38dS6yb3CqSRLrYt4SfDlx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ajevik7blFiPpl8rqHzrE\",\"error\":\"_3i2F2hSYmJr-6SKPFJe8Aw\",\"success\":\"_1wqIAlCYQsq9KAocDus16O\",\"primary\":\"_2Limk5MVXprVj6A3ZNryrL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"_1VROptdHI9xDuHX3xSd0TN\",\"invalid\":\"iI0zS9JbXt26c8ORF238A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"_1YgKh5-2vFDb7_6hPbmsB6\",\"QuizWrapper\":\"_3xC_eHiHj9I7ixbcYFVuSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"_2aF-ETEz5Uw_hwqgH1nMHd\",\"Question\":\"_1DBQpbIA4b48_krnabND3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"_2E3aRuOAvALxwJ64TjxD0e\",\"success\":\"_1LWwOWzK3fQBuVjeIfgivh\",\"error\":\"_33P5DZUx4PqLBjnNHwOgLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"_2KeHujPDq83i5WeRsI-CsL\",\"success\":\"_2INriMCEx0o_5ZL28MiGYF\",\"error\":\"_3HVNljcTWH-L_e_6V-v5eG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_2f_1D1E_vryA_GS2XSw3SL\",\"center\":\"_1imo0X3lROJc3NUY3tObG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"_1WKx0cW0EyKqC1Mv7BZVSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"eeZpuqqQv57ZOcVDbRJ0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"_8k9Jp5qAqNPReHxCWQVa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"_2R7qzaguoNb1IrpqmovVUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"zn-IS6s13zfFPY9NTfzLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"_1DltaZPhnIQigqfUDZNubp\"};","import React from 'react';\r\nimport classes from './MenuToggle.css';\r\n\r\nconst MenuToggle = props => {\r\n  \r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa', \r\n  ];\r\n\r\n  if (props.isOpen) {\r\n    cls.push('fa-times');\r\n    cls.push(classes.open);\r\n  } else {\r\n    cls.push('fa-bars');\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './Backdrop.css';\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop;","import React, {Component} from 'react';\r\nimport classes from './Drawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Drawer extends Component {\r\n\r\n  clickHandler = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  renderLinks(links) {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={classes.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() { \r\n    const cls = [classes.Drawer];\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    const links = [\r\n      {to: '/', label: 'Список', exact: true}\r\n    ];\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n      links.push({to: '/logout', label: 'Выйти', exact: false})\r\n    } else {\r\n      links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>\r\n            {this.renderLinks(links) }\r\n          </ul>\r\n        </nav>\r\n        { this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    });\r\n  }\r\n\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n\r\n        <Drawer\r\n          isOpen ={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n\r\n        <main>\r\n          { this.props.children }\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst Button = props => {\r\n\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || 'text';\r\n  const cls =[classes.Input];\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(classes.invalid);\r\n  }\r\n  \r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        className={cls.join(' ')}\r\n      />\r\n\r\n      {\r\n        isInvalid(props) \r\n        ? <span>{props.errorMessage || 'Введите верное значение'}</span> \r\n        : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-90be0.firebaseio.com/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n","import axios from '../../axios/axios-quiz'\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes'\r\n\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email, password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDkGrZb884H_b3U53tDPBGRwSULRwFvplw'\r\n\r\n    if (isLogin) {\r\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDkGrZb884H_b3U53tDPBGRwSULRwFvplw'\r\n    }\r\n\r\n    const response = await axios.post(url, authData);\r\n    const data = response.data;\r\n\r\n    const experationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n    localStorage.setItem('token', data.idToken);\r\n    localStorage.setItem('userId', data.localId);\r\n    localStorage.setItem('experationDate', experationDate);\r\n\r\n    dispatch(authSuccess(data.idToken));\r\n    dispatch(autoLogout(data.expiresIn));\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('userId');\r\n  localStorage.removeItem('experationDate');\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const experationDate = new Date (localStorage.getItem('experationDate'));\r\n      if (experationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token));\r\n        dispatch(autoLogout((experationDate.getTime() - new Date().getTime()) / 1000));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport classes from './Auth.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport is from 'is_js';\r\nimport axios from '../../axios/axios-quiz';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../store/actions/auth';\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль (Не менее 6 символов)',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    )\r\n  }\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    )\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid; \r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler(event, controlName) {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    });\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    });\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      const { type, value, valid, touched, label, errorMessage, validation } = control;\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={type}\r\n          value={value}\r\n          valid={valid}\r\n          touched={touched}\r\n          label={label}\r\n          shouldValidate={!!validation}\r\n          errorMessage={errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            { this.renderInputs() }\r\n\r\n            <Button \r\n              type='success' \r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n                Войти\r\n            </Button>\r\n\r\n            <Button \r\n              type='primary' \r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n                Зарегистрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);\r\n","import React from 'react';\r\nimport classes from './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n  const cls = [classes.AnswerItem];\r\n\r\n  if(props.state) {\r\n    cls.push(classes[props.state])\r\n  }\r\n\r\n  return (\r\n    <li \r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      {props.answer.text}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => (\r\n  <ul className={classes.AnswersList}>\r\n    {props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswerItem\r\n          key={index}\r\n          answer={answer}\r\n          onAnswerClick={props.onAnswerClick}\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      )\r\n    }) }\r\n  </ul>\r\n)\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\n\r\nconst ActiveQuiz = props => (\r\n  <div className={classes.ActiveQuiz}>\r\n    <p className={classes.Question}>\r\n      <span>\r\n        <strong>{props.answerNumber}.</strong>&nbsp;\r\n        {props.question}\r\n      </span>\r\n\r\n      <small>{props.answerNumber} из {props.quizLength}</small>\r\n    </p>\r\n\r\n    <AnswersList\r\n      state={props.state}\r\n      answers={props.answers}\r\n      onAnswerClick={props.onAnswerClick}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from 'react';\r\nimport classes from './FinishedQuiz.css';\r\nimport Button from '../UI/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FinishedQuiz = props => {\r\n  \r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++;\r\n    }\r\n\r\n    return total;\r\n  }, 0)\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        { props.quiz.map((quizItem, index) => {\r\n\r\n        const cls = [\r\n          'fa', \r\n          props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n          classes[props.results[quizItem.id]]\r\n          ];\r\n\r\n          return (\r\n            <li key={index}>\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n\r\n        }) }\r\n      </ul>\r\n\r\n      <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n      <div>\r\n        <Button onClick={props.onRetry} type='primary'>Повторить</Button>\r\n        <Link to='/'>\r\n          <Button type='success'>Перейти в список тестов</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz;","import React from 'react';\r\nimport classes from './Loader.css';\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className={classes.center}>\r\n      <div className={classes.Loader}>\r\n        <div /><div />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import axios from '../../axios/axios-quiz';\r\nimport {  FETCH_QUIZES_START, \r\n          FETCH_QUIZES_SUCCESS, \r\n          FETCH_QUIZES_ERROR, \r\n          FETCH_QUIZ_SUCCESS,\r\n          QUIZ_SET_STATE,\r\n          FINISH_QUIZ,\r\n          QUIZ_NEXT_QUESTION,\r\n          QUIZ_RETRY\r\n        } from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get('quizes.json')\r\n\r\n      const quizes = [];\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Test №${index + 1}`\r\n        })\r\n      })\r\n\r\n     dispatch(fetchQuizesSuccess(quizes)) \r\n    } catch (e) {\r\n      dispatch(fetchQuizesError())\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    \r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`)\r\n      const quiz = response.data\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e)) \r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport default function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n return {\r\n   type: QUIZ_RETRY\r\n } \r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n    \r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0];\r\n      if (state.answerState[key] === 'success') {\r\n        return \r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const { results } = state;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success';\r\n      }\r\n\r\n      dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n        }\r\n\r\n        window.clearTimeout(timeout);\r\n      }, 1000);\r\n    } else {\r\n      results[question.id] = 'error';\r\n      dispatch(quizSetState({[answerId]: 'error'}, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}","import React, { Component } from 'react';\r\nimport classes from './Quiz.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz';\r\n\r\nclass Quiz extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n     this.props.retryQuiz()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Ответьте на все вопросы</h1>\r\n\r\n          {\r\n            this.props.loading || !this.props.quiz\r\n            ? <Loader />\r\n            : this.props.isFinished \r\n              ? <FinishedQuiz\r\n                  results={this.props.results}\r\n                  quiz={this.props.quiz}\r\n                  onRetry={this.props.retryQuiz}\r\n                />\r\n              : <ActiveQuiz\r\n                  answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                  question={this.props.quiz[this.props.activeQuestion].question}\r\n                  onAnswerClick={this.props.quizAnswerClick}\r\n                  quizLength={this.props.quiz.length}\r\n                  answerNumber={this.props.activeQuestion + 1}\r\n                  state={this.props.answerState}\r\n                />\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    results: state.quiz.results,\r\n    isFinished: state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState,\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true;\r\n  }\r\n\r\n  let isValid = true;\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n\r\n  return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true;\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid;\r\n    }\r\n  }\r\n\r\n  return isFormValid;\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary;","import React from 'react';\r\nimport classes from './Select.css';\r\n\r\nconst Select = props => {\r\n  const htmlFor = `${props.label}-${Math.random()}`;\r\n\r\n  return (\r\n    <div className={classes.Select}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select \r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        { props.options.map((option, index) => {\r\n          return (\r\n            <option\r\n              value={option.value}\r\n              key={option.value + index}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          )\r\n        }) }\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;","import { CREATE_QUIZ_QUESTION } from './actionTypes';\r\nimport { RESET_QUIZ_CREATION } from './actionTypes'\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  }\r\n} \r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('quizes.json', getState().create.quiz)\r\n    dispatch(resetQuizCreation)\r\n  }\r\n} \r\n","import React, { Component } from 'react';\r\nimport classes from './QuizCreator.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { createControl, validate, validateForm } from '../../form/formFramework';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport { connect } from 'react-redux';\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create';\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Значение не может быть пустым',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n      question: createControl({\r\n        label: 'Введите вопрос',\r\n        errorMessage: 'Вопрос не может быть пустым'\r\n      }, {required: true}),\r\n      option1: createOptionControl(1),\r\n      option2: createOptionControl(2),\r\n      option3: createOptionControl(3),\r\n      option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  addQuestionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id },\r\n        {text: option2.value, id: option2.id },\r\n        {text: option3.value, id: option3.id },\r\n        {text: option4.value, id: option4.id }\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem);\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz();\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    });\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      const {label, value, valid, validation, touched, errorMessage} = control;\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={label}\r\n            value={value}\r\n            valid={valid}\r\n            shouldValidate={!!validation}\r\n            touched={touched}\r\n            errorMessage={errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    }); \r\n  }\r\n\r\n  render() {\r\n    const select = <Select \r\n      label='Выберите правильный ответ'\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4}\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n            \r\n            { this.renderControls() }\r\n\r\n            { select }\r\n\r\n            <Button\r\n              type='primary'\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type='success'\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\r\n","import React, { Component } from 'react';\r\nimport classes from './QuizList.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizes } from '../../store/actions/quiz';\r\n\r\n\r\nclass QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li \r\n          key={quiz.id}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz.id}>\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizes();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Список тестов</h1>\r\n\r\n          {\r\n            this.props.loading && this.props.quizes.length !== 0\r\n              ? <Loader />\r\n              : <ul>\r\n                  { this.renderQuizes() }\r\n                </ul> \r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { logout } from '../../store/actions/auth'\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'} />\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Auth from './containers/Auth/Auth';\nimport Quiz from './containers/Quiz/Quiz';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport QuizList from './containers/QuizList/QuizList';\nimport Logout from './components/Logout/Logout';\n\nimport { autoLogin } from './store/actions/auth'\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/quiz/:id' component={Quiz} />\n        <Route path='/' exact component={QuizList} />\n        <Redirect to='/' />\n      </Switch> \n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={QuizList} />\n          <Redirect to='/' />\n        </Switch>  \n      )\n    }\n\n    return (\n      <Layout>\n        { routes }\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {  FETCH_QUIZES_START, \r\n          FETCH_QUIZES_SUCCESS, \r\n          FETCH_QUIZ_SUCCESS, \r\n          FETCH_QUIZES_ERROR,\r\n          QUIZ_SET_STATE,\r\n          FINISH_QUIZ,\r\n          QUIZ_NEXT_QUESTION,\r\n          QUIZ_RETRY \r\n        } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {},\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null,\r\n  quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, \r\n        loading: true\r\n      }\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state, \r\n        loading: false,\r\n        quizes: action.quizes\r\n      }\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      }\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, \r\n        loading: false,\r\n        quiz: action.quiz\r\n      }\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state,\r\n        answerState: action.answerState,\r\n        results: action.results\r\n      }\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state,\r\n        isFinished: true\r\n      }\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state,\r\n        answerState: null,\r\n        activeQuestion: action.number\r\n      }\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state,\r\n        quiz: []\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}","import { AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.token\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport quizReducer from './quiz';\r\nimport createReducer from './create';\r\nimport authReducer from './auth';\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(thunk)\n    )\n  );\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}